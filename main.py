# -*- coding: utf-8 -*-
"""Visdat_TUBES_Kel0mpok_1 .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12Q2GwJcGJg5yTeypN6JAyPDxlGUpy96-

# **Visdat Tubes**

Library
"""

#import pandas and numpy
import pandas as pd
pd.options.mode.chained_assignment = None  # default='warn'
import numpy as np

# !pip install bokeh

from bokeh.io import output_file, output_notebook,curdoc
from bokeh.plotting import figure, show
from bokeh.models import ColumnDataSource
from bokeh.layouts import row, column, gridplot
from bokeh.models.widgets import Tabs, Panel
from bokeh.core.validation import silence
from bokeh.core.validation.warnings import EMPTY_LAYOUT, MISSING_RENDERERS
silence(EMPTY_LAYOUT, True)
silence(MISSING_RENDERERS, True)

"""Tema bokeh"""

curdoc().theme = "night_sky"
output_notebook()

"""Dataset"""

# source : https://www.kaggle.com/datasets/jackogozaly/steam-player-data

# !gdown --id 1yry1uuGGz_LBCdGMamA3eL0ptApAHnYd

df_steam= pd.read_csv("Valve_Player_Data.csv").dropna()
df_steam.head()

"""Data split menggunakan groupby pandas untuk masing-masing game (CSGO, Dota 2 dan PUBG) ke bentuk Dataframe"""

grouped = df_steam.groupby(df_steam.Game_Name)
df_CSGO = grouped.get_group("Counter Strike: Global Offensive")
df_CSGO

grouped = df_steam.groupby(df_steam.Game_Name)
df_DOTA = grouped.get_group("Dota 2")
df_DOTA

grouped = df_steam.groupby(df_steam.Game_Name)
df_PUBG = grouped.get_group("PUBG: Battlegrounds")
df_PUBG

"""Ubah format Date ke format datetime"""

df_CSGO['Date'] = pd.to_datetime(df_CSGO['Date'])
df_DOTA['Date'] = pd.to_datetime(df_DOTA['Date'])
df_PUBG['Date'] = pd.to_datetime(df_PUBG['Date'])

"""# Test Figure Peak Players untuk masing-masing game"""

p = figure(title='Counter Strike: Global Offensive',
           x_axis_label='Date', y_axis_label='Jumlah Peak Players',
           x_axis_type='datetime',
           sizing_mode="stretch_width", plot_height=500)
p.left[0].formatter.use_scientific = False
p.line(x=df_CSGO['Date'], y=df_CSGO['Peak_Players'], line_width=2, line_color="yellow")
show(p)

p = figure(title='DOTA 2',
           x_axis_label='Date', y_axis_label='Jumlah Peak Players',
           x_axis_type='datetime',
           sizing_mode="stretch_width", plot_height=500)
p.left[0].formatter.use_scientific = False
p.line(x=df_DOTA['Date'], y=df_DOTA['Peak_Players'], line_width=2, line_color="red")
show(p)

p = figure(title='Player Unkowns Battleground',
           x_axis_label='Date', y_axis_label='Jumlah Peak Players',
           x_axis_type='datetime',
           sizing_mode="stretch_width", plot_height=500)
p.left[0].formatter.use_scientific = False
p.line(x=df_PUBG['Date'], y=df_PUBG['Peak_Players'], line_width=2, line_color="cyan")
show(p)

#Ganti dataframe ke Datasource

cds_CSGO = ColumnDataSource(df_CSGO)
cds_DOTA = ColumnDataSource(df_DOTA)
cds_PUBG = ColumnDataSource(df_PUBG)

# Sedikit Styling
def set_style(p):
  p.xaxis.major_label_text_font_size = '10pt'
  p.yaxis.major_label_text_font_size = '12pt'

df_CSGO['image'] = 'https://cdn.akamai.steamstatic.com/steam/apps/730/capsule_616x353.jpg?t=1641233427'
df_DOTA['image'] = 'https://cdn.akamai.steamstatic.com/steam/apps/730/capsule_616x353.jpg?t=1641233427'
df_PUBG['image'] = 'https://cdn.akamai.steamstatic.com/steam/apps/730/capsule_616x353.jpg?t=1641233427'

from bokeh.layouts import layout
from bokeh.models import HoverTool,Select
from bokeh.models import CustomJS

# hover
hover = HoverTool(tooltips="""
                  <div>
                    <div><strong>Peak_Players:</strong>@{Peak_Players}</div>
                    <br>
                    <div><alt="@Name" width="420" /><div>
                  </div>   
                  """)

TOOLTIPS="""
      <div>
        <div><strong>Peak_Players:</strong>@{Peak_Players}</div>
        <br>
        <div><alt="@Name" width="420" /><div>
      </div>
        
"""

TOOLTIPS2="""
      <div>
        <div><strong>Gain:</strong>@{Peak_Players}</div>
        <br>
        <div><alt="@Name" width="420" /><div>
      </div>

"""

# Figure Atas
fig = figure(title='Grafik Player Steam',
             x_axis_label='Date', y_axis_label='Jumlah Player',
             x_axis_type='datetime',
             sizing_mode="stretch_width", plot_height=500, plot_width=769)

fig.left[0].formatter.use_scientific = False

# Set Grafik masing-masing data
points = fig.line(x='Date', y='Peak_Players', source=cds_CSGO, legend_label="CSGO", line_width=2, line_color="yellow")
points2 = fig.line(x='Date', y='Peak_Players', source=cds_DOTA, legend_label="DOTA", line_width=2, line_color="red")
points3 = fig.line(x='Date', y='Peak_Players', source=cds_PUBG, legend_label="PUBG", line_width=2, line_color="cyan")

# Value untuk menu dropdown
select = Select(title="Lihat berdasarkan", value=points.glyph.y, options=['Peak_Players', 'Gain'])

# Callback javascript untuk dropdown menu
select.js_on_change('value',
                    CustomJS(args=dict(other1=fig, hover=hover, TOOLTIPS=TOOLTIPS, TOOLTIPS2=TOOLTIPS2, fig=fig.tools, points=points, points2=points2, points3=points3, new_y={}),
                    code="""
                        new_y = {'field':this.value}
                        points.glyph.y = new_y
                        points2.glyph.y = new_y
                        points3.glyph.y = new_y

                        if(this.value == 'Peak_Players'){
                          console.log('Change hover to :', this.value)
                          fig[6].tooltips = TOOLTIPS
                          
                        }else if(this.value == 'Gain'){
                          console.log('Change hover to :', this.value)
                          fig[6].tooltips = TOOLTIPS2
                        }
                        console.log(new_y)

                    """
                    )
                  )

# Figure Bawah
# Figure 1 CSGO
fig1 = figure(title='CSGO Steam Peak Players Count',
             x_axis_label='Date', y_axis_label='Jumlah Peak Player',
             x_axis_type='datetime',
             sizing_mode="stretch_width", plot_height=350, plot_width=969)    
fig1.left[0].formatter.use_scientific = False
fig1.line(x=df_CSGO['Date'], y=df_CSGO['Peak_Players'], line_width=2, line_color="yellow")
tab1 = Panel(child=fig1, title="CSGO")

# Figure 2 DOTA
fig2 =figure(title='DOTA Steam Peak Players Count',
             x_axis_label='Date', y_axis_label='Jumlah Peak Player',
             x_axis_type='datetime',
             sizing_mode="stretch_width", plot_height=350, plot_width=969)    
fig2.left[0].formatter.use_scientific = False
fig2.line(x=df_DOTA['Date'], y=df_DOTA['Peak_Players'], line_width=2, line_color="red")
tab2 = Panel(child=fig2, title="DOTA")

# Figure 3 PUBG
fig3 =figure(title='PUBG Steam Peak Players Count',
             x_axis_label='Date', y_axis_label='Jumlah Peak Player',
             x_axis_type='datetime',
             sizing_mode="stretch_width", plot_height=350, plot_width=969)    
fig3.left[0].formatter.use_scientific = False
fig3.line(x=df_PUBG['Date'], y=df_PUBG['Peak_Players'], line_width=2, line_color="cyan")
tab3 = Panel(child=fig3, title="PUBG")


tabs = Tabs(tabs=[tab1, tab2, tab3])

set_style(fig1)
set_style(fig2)
set_style(fig3)

# Main App
fig.add_tools(hover)

fig.title.text_font_size= "25px"
fig.title.align="right"
fig.title.text_color="white"
fig.legend.background_fill_color="black"
fig.legend.click_policy="hide"

layout=layout([
               [select],
               [fig],
               [tabs],
])

# show(layout)

curdoc().add_root(column(layout))
